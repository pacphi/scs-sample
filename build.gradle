plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.ben-manes.versions' version '0.38.0'
	id 'java'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '2.8.0'
    id 'com.github.spotbugs' version '4.7.0'
    id 'info.solidsoft.pitest' version '1.6.0'
}

spotbugs {
    toolVersion = '4.2.1'
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'low'
    showProgress = true
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
        }
        xml {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.xml")
        }
    }
}

group = 'com.fns'
version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

ext {
    set('springCloudServicesVersion', '3.2.0.RELEASE')
    set('springCloudVersion', "2020.0.1")
    // @see https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-dependencies/pom.xml
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
    }
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

configurations {
	// exclude Logback
    implementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
	}
}

java {
    withJavadocJar()
    withSourcesJar()
}

jacoco {
	toolVersion = "0.8.6"
}

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
		csv.enabled = false
	}
}

pitest {
    testPlugin = "junit5"
    jvmArgs = ['-Xmx1024m']
    threads = 5
    targetClasses = ['io.pivotal.sample.*']
    outputFormats = ['XML', 'HTML']
}

dependencies {
    annotationProcessor('org.projectlombok:lombok')
    implementation('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-configuration-processor')
    implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-config-client')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.cloud:spring-cloud-starter-bootstrap')
    implementation('org.springframework.credhub:spring-credhub-starter:2.1.1.RELEASE')
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure')
    implementation('org.springframework.security:spring-security-rsa')
    implementation('org.springframework.boot:spring-boot-starter-log4j2')
    implementation('com.lmax:disruptor:3.4.2')
    testImplementation('org.assertj:assertj-core:3.19.0')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.junit.jupiter:junit-jupiter-params')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    testImplementation('org.mockito:mockito-core')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	    exclude group: 'junit', module: 'junit'
    }
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('org.pitest:pitest-junit5-plugin:0.12')
}

javadoc {
    failOnError = false
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

bootJar.enabled = true
jar.enabled = false

test.finalizedBy jacocoTestReport
